import { Button, VerticalBox , LineEdit} from "std-widgets.slint";

component FilePathSelection inherits Rectangle {
    out property<bool> is-directory;
    out property<string> file-matcher;
    in-out property<string> label;
    height: 50px;
    background: darkorange;
    border-radius: 15px;

    HorizontalLayout {
        spacing: 10px;
        padding: 10px;
        Text {
            font-size: 20px;
            text: label;
            vertical-alignment: center;
            padding-left: 20px;
            color: white;
        }

        val := LineEdit {
            edited => {
                root.background = Colors.darkorange
            }
            accepted => {
                root.text-accepted(self.text);
            }
        }
        Button {
            width: 150px;
            text: "Choose Directory";
            clicked => {
                root.background = Colors.darkorange;
                root.choose-click();
            }
        }
    }

    callback text-accepted(string);
    callback change-text(string);
    change-text(s) => {
        val.text = s;
    }
    callback validate-text;
    validate-text => { root.background = Colors.darkgreen }
    callback choose-click;
}

export component Demo inherits Window {
  property<brush> b2: Colors.red;
  preferred-width: 1000px;
  preferred-height: 500px;
  padding: 10px;
  background: black;
    ws-select := FilePathSelection{
        y: 10px;
        x: 10px;
        width: 980px;
        label: "Path of rF2 ModMgr.exe";
        text-accepted(s) => {
            root.ws-text-accepted(s);
        }
        choose-click => {
            root.ws-choose-dir();
        }
    }
  rect := Rectangle {

    y: 600px;
    x: 10px;
    width: 900px;
    height: 50px;
    background: darkorange;
    border-radius: 15px;
    val := LineEdit {
        x: 10px;
        width: 220px;
    }
    Button {
        x: 240px;
        width: 150px;
        text: "Choose Directory";
        clicked => {
            rect.background = b2;
            root.choose-dir()
        }
    }
  }


    callback ws-text-accepted(string);

    
    callback ws-change-text(string);
    ws-change-text(s) => {
        val.text = s;
        root.background = Colors.darkorange
    }
    callback ws-validate-text;
    ws-validate-text => { root.background = Colors.darkgreen }
    
    callback ws-choose-dir;
    callback change-dir(string);
    change-dir(d) => { rect.background = Colors.darkorange; }
    callback validate-dir;
    callback dir-validated;
    dir-validated() => { rect.background = Colors.darkgreen }
}
